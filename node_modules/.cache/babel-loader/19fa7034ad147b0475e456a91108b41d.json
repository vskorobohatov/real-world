{"ast":null,"code":"var _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/SettingsPage/Profile/Profile.js\";\nimport React from \"react\";\n\nfunction Profile(props) {\n  const classes = useStyles();\n  let isLogged = props.articles.Articles.isLogged;\n\n  function signIn() {\n    isLogged = true;\n    props.log(isLogged);\n  }\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }),\n    label: \"Remember me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/register\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\\"Don't have an account? Sign Up\\\"\")))));\n}\n\nconst mapStateToProps = state => ({\n  articles: state\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  log\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/SettingsPage/Profile/Profile.js"],"names":["React","Profile","props","classes","useStyles","isLogged","articles","Articles","signIn","log","paper","avatar","links","submit","mapStateToProps","state","mapDispatchToProps","dispatch","bindActionCreators","connect","Login"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction Profile(props) {\n  const classes = useStyles();\n  let isLogged = props.articles.Articles.isLogged;\n  function signIn(){\n    isLogged = true;\n    props.log(isLogged);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Link to=\"/\" className={classes.links} >\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={signIn}\n            >\n              Sign In\n            </Button>\n          </Link>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n            <Link to=\"/register\" className={classes.links} >\n                \"Don't have an account? Sign Up\"\n              </Link>\n            </Grid>\n          </Grid>\n      </div>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state =>({\n  articles:state\n})\n\nconst mapDispatchToProps =  dispatch => bindActionCreators({\n  log\n},dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/ArticlePage/ArticlePage.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle';\nimport { editArticle } from '../../actions/editArticle';\nimport { addComment } from '../../actions/addComment';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getUser } from '../../selectors/getUser';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Comment from './comment/comment';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    height: \"100%\"\n  },\n  tag: {\n    color: \"grey\",\n    fontSize: \"13px\"\n  },\n  links: {\n    textDecoration: \"none\",\n    position: \"relative\",\n    right: \"0\"\n  },\n  divider: {\n    marginBottom: \"10px\"\n  },\n  label: {\n    fontSize: \"20px\"\n  },\n  commentsSection: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction ArticlePage(props) {\n  const classes = useStyles();\n  const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n  const user = props.user.User;\n\n  const _useState = useState({\n    readOnly: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n\n  const _useState3 = useState(\"Edit\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editBtnText = _useState4[0],\n        setEditBtnText = _useState4[1];\n\n  const _useState5 = useState({\n    id: article.id,\n    author: user.fname,\n    body: \"\",\n    test: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userComment = _useState6[0],\n        setComment = _useState6[1];\n\n  const _useState7 = useState({\n    id: article.id,\n    title: article.title,\n    body: article.body,\n    tags: article.tags,\n    author: user.fname,\n    comments: article.comments\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        state = _useState8[0],\n        setState = _useState8[1];\n\n  const commentsList = state.comments.map((item, id) => {\n    return React.createElement(Comment, {\n      author: item.author,\n      body: item.body,\n      key: id,\n      created: item.created,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  });\n\n  function editArticle(event) {\n    event.preventDefault();\n\n    if (editBtnText === \"Edit\") {\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: false\n      }));\n      setEditBtnText(\"Save\");\n    } else {\n      props.editArticle(state);\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: true\n      }));\n      setEditBtnText(\"Edit\");\n    }\n  }\n\n  function addComment(event) {\n    event.preventDefault();\n    setComment(_objectSpread({}, userComment, {\n      test: \"12312312312\"\n    }));\n    state.comments.push(userComment);\n    console.log(userComment);\n    props.editArticle(state);\n    setComment(_objectSpread({}, userComment, {\n      body: \"\"\n    }));\n  }\n\n  function getCurrentDate(separator = '/') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return \"\".concat(year).concat(separator).concat(month < 10 ? \"0\".concat(month) : \"\".concat(month)).concat(separator).concat(date);\n  }\n\n  return React.createElement(Container, {\n    maxwidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, state.title), React.createElement(Typography, {\n    component: \"p\",\n    className: classes.tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Author: \", article.author), React.createElement(TextField, {\n    id: \"articleBody\",\n    label: \"\",\n    defaultValue: state.body,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: {\n      className: classes.label\n    },\n    onChange: event => setState(_objectSpread({}, state, {\n      body: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 8,\n    md: 10,\n    lg: 10,\n    xl: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, article.tags)), user.isLogged && user.fname === article.author ? React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    sm: 2,\n    md: 1,\n    lg: 1,\n    xl: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"primary\",\n    onClick: editArticle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, editBtnText)), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    sm: 2,\n    md: 1,\n    lg: 1,\n    xl: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"secondary\",\n    onClick: event => props.deleteArticle(article.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Delete\")))) : React.createElement(React.Fragment, null)), React.createElement(\"div\", {\n    className: classes.commentsSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Comments:\", commentsList, user.isLogged ? React.createElement(React.Fragment, null, React.createElement(TextField, {\n    id: \"comment\",\n    label: \"Your comment\",\n    variant: \"outlined\",\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    value: userComment.body,\n    onChange: event => setComment(_objectSpread({}, userComment, {\n      body: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"default\",\n    onClick: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Comment\")) : React.createElement(Typography, {\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"SignIn to leave comments\"))));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  user: getUser\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  editArticle,\n  deleteArticle,\n  addComment\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/ArticlePage/ArticlePage.js"],"names":["React","useState","connect","makeStyles","deleteArticle","editArticle","addComment","createStructuredSelector","getAllArticles","getUser","bindActionCreators","Typography","Button","Grid","Link","Container","TextField","Comment","useStyles","theme","root","padding","spacing","marginBottom","button","height","tag","color","fontSize","links","textDecoration","position","right","divider","label","commentsSection","marginTop","ArticlePage","props","classes","article","articles","find","item","id","parseInt","match","params","user","User","readOnly","editMode","setEditMode","editBtnText","setEditBtnText","author","fname","body","test","userComment","setComment","title","tags","comments","state","setState","commentsList","map","created","event","preventDefault","push","console","log","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","textField","className","target","value","isLogged","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle'\nimport { editArticle } from '../../actions/editArticle'\nimport { addComment } from '../../actions/addComment'\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getUser } from '../../selectors/getUser';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Comment from './comment/comment'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n      },\n      button:{\n        height:\"100%\"\n      },\n      tag:{\n        color:\"grey\",\n        fontSize: \"13px\"\n      },\n      links:{\n        textDecoration:\"none\",\n        position:\"relative\",\n        right:\"0\"\n      },\n      divider:{\n        marginBottom:\"10px\"\n      },\n      label: {\n        fontSize:\"20px\",\n      },\n      commentsSection:{\n        marginTop:theme.spacing(2)\n      }\n}));\n\nfunction ArticlePage(props) {\n    const classes = useStyles();\n    const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n    const user = props.user.User;\n    const [editMode, setEditMode] = useState({readOnly: true});\n    const [editBtnText, setEditBtnText] = useState(\"Edit\");\n    const [userComment, setComment] = useState({\n      id: article.id,\n      author:user.fname,\n      body:\"\",\n      test:\"\",\n    });\n    const [state, setState] = useState({\n      id:article.id,\n      title:article.title,\n      body:article.body,\n      tags:article.tags,\n      author:user.fname,\n      comments:article.comments,\n    });\n    \n    const commentsList = state.comments.map((item, id)=>{\n      return <Comment author={item.author} body={item.body} key={id} created={item.created}/>\n    });\n    \n    function editArticle(event){\n      event.preventDefault();\n      if(editBtnText === \"Edit\"){\n        setEditMode({...editMode, readOnly:false});\n        setEditBtnText(\"Save\");\n      }else{\n        props.editArticle(state);\n        setEditMode({...editMode, readOnly:true});\n        setEditBtnText(\"Edit\");\n      }\n    }\n    \n    function addComment(event){\n      event.preventDefault();\n      setComment({...userComment, test:\"12312312312\"})\n      state.comments.push(userComment);\n      console.log(userComment)\n      props.editArticle(state);\n      setComment({...userComment, body:\"\"})\n    }\n\n    function getCurrentDate(separator='/'){\n      let newDate = new Date()\n      let date = newDate.getDate();\n      let month = newDate.getMonth() + 1;\n      let year = newDate.getFullYear();\n      return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n      }\n\n    return (\n        <Container maxwidth=\"lg\">\n          <Typography component=\"p\" >\n          {state.title}\n          </Typography>\n          <Typography component=\"p\" className={classes.tag}>\n            Author: {article.author}\n          </Typography>\n          <TextField\n            id=\"articleBody\"\n            label=\"\"\n            defaultValue={state.body}\n            className={classes.textField}\n            margin=\"normal\"\n            fullWidth\n            multiline\n            InputProps={editMode}\n            InputLabelProps={{\n              className: classes.label,\n          }}\n            onChange={event => setState({...state, body:event.target.value})}\n          />\n          <Grid container>\n            <Grid item xs={6} sm={8} md={10} lg={10} xl={10}>\n              <Typography component=\"p\" className={classes.tag}>\n                {article.tags}\n              </Typography>\n            </Grid>  \n            {(user.isLogged && user.fname === article.author) ?(\n              <>\n                <Grid item xs={3} sm={2} md={1} lg={1} xl={1}>  \n                    <Button variant=\"outlined\" fullWidth className={classes.button} color=\"primary\" onClick={editArticle}>{editBtnText}</Button>\n                </Grid>\n                <Grid item xs={3} sm={2} md={1} lg={1} xl={1}>\n                  <Link to=\"/\" className={classes.links}>\n                    <Button variant=\"outlined\" fullWidth className={classes.button} color=\"secondary\" onClick={event => props.deleteArticle(article.id)}>Delete</Button>\n                  </Link>\n                </Grid>\n              </>\n              ):(<></>)\n            }\n          </Grid>\n          <div className={classes.commentsSection}>\n          Comments:\n          {commentsList}\n          {user.isLogged ?(\n              <>\n                <TextField\n                  id=\"comment\"\n                  label=\"Your comment\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  margin=\"normal\"\n                  fullWidth\n                  multiline\n                  value={userComment.body}\n                  onChange={event => setComment({...userComment, body:event.target.value})}\n                />\n                 <Button variant=\"outlined\" color=\"default\" onClick={addComment}>Comment</Button>\n              </>\n              ):(\n              <Typography component=\"h1\">\n                <b>\n                  SignIn to leave comments\n                </b>\n            </Typography>\n            )\n            }\n          </div>\n        </Container>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  user: getUser\n})\nconst mapDispatchToProps =  dispatch => bindActionCreators({\n  editArticle,\n  deleteArticle,\n  addComment\n},dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage)"]},"metadata":{},"sourceType":"module"}
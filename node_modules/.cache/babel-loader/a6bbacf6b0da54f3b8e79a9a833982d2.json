{"ast":null,"code":"import _objectSpread from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/ArticlePage/ArticlePage.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle';\nimport { addArticle } from '../../actions/addArticle';\nimport Container from '@material-ui/core/Container';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getLogged } from '../../selectors/getLogged';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    height: \"100%\"\n  },\n  tag: {\n    color: \"grey\",\n    fontSize: \"13px\"\n  },\n  links: {\n    textDecoration: \"none\",\n    position: \"relative\",\n    right: \"0\"\n  },\n  divider: {\n    marginBottom: \"10px\"\n  },\n  label: {}\n}));\n\nfunction ArticlePage(props) {\n  const classes = useStyles();\n  const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n  const isLogged = props.isLogged;\n\n  const _useState = useState({\n    readOnly: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n\n  const _useState3 = useState(\"Edit\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editBtnText = _useState4[0],\n        setEditBtnText = _useState4[1];\n\n  const _useState5 = useState({\n    id: Math.floor(Math.random() * (100000 - 0 + 1)) + 0,\n    title: article.title,\n    body: article.body,\n    tags: article.tags\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        state = _useState6[0],\n        setState = _useState6[1];\n\n  function editArticle(event) {\n    event.preventDefault();\n\n    if (editBtnText === \"Edit\") {\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: false\n      }));\n      setEditBtnText(\"Save\");\n    } else {\n      props.addArticle(state);\n      props.deleteArticle(article.id);\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: true\n      }));\n      setEditBtnText(\"Edit\");\n      props.history.push(\"/\");\n    }\n  }\n\n  return React.createElement(Container, {\n    maxwidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"articleBody\",\n    label: state.title,\n    defaultValue: state.body,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: classes.label,\n    onChange: event => setState(_objectSpread({}, state, {\n      body: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 10,\n    xl: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, article.tags)), isLogged ? React.createElement(React.Fragment, null, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    md: 2,\n    lg: 1,\n    xl: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"primary\",\n    onClick: editArticle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, editBtnText)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    md: 2,\n    lg: 1,\n    xl: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"secondary\",\n    onClick: event => props.deleteArticle(article.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Delete\")))) : React.createElement(React.Fragment, null))));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  isLogged: getLogged\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addArticle,\n  deleteArticle\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/ArticlePage/ArticlePage.js"],"names":["React","useState","connect","makeStyles","deleteArticle","addArticle","Container","createStructuredSelector","getAllArticles","getLogged","bindActionCreators","Typography","Button","Grid","Link","Paper","TextField","useStyles","theme","root","padding","spacing","marginBottom","button","height","tag","color","fontSize","links","textDecoration","position","right","divider","label","ArticlePage","props","classes","article","articles","find","item","id","parseInt","match","params","isLogged","readOnly","editMode","setEditMode","editBtnText","setEditBtnText","Math","floor","random","title","body","tags","state","setState","editArticle","event","preventDefault","history","push","textField","target","value","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle'\nimport { addArticle } from '../../actions/addArticle'\nimport Container from '@material-ui/core/Container';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getLogged } from '../../selectors/getLogged';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n      },\n      button:{\n        height:\"100%\"\n      },\n      tag:{\n        color:\"grey\",\n        fontSize: \"13px\"\n      },\n      links:{\n        textDecoration:\"none\",\n        position:\"relative\",\n        right:\"0\"\n      },\n      divider:{\n        marginBottom:\"10px\"\n      },\n      label:{\n        \n      }\n}));\n\nfunction ArticlePage(props) {\n    const classes = useStyles();\n    const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n    const isLogged = props.isLogged;\n    const [editMode, setEditMode] = useState({readOnly: true});\n    const [editBtnText, setEditBtnText] = useState(\"Edit\");\n    const [state, setState] = useState({\n      id:Math.floor(Math.random() * (100000 - 0 + 1)) + 0,\n      title:article.title,\n      body:article.body,\n      tags:article.tags\n    });\n    \n\n    function editArticle(event){\n      event.preventDefault();\n      if(editBtnText === \"Edit\"){\n        setEditMode({...editMode, readOnly:false});\n        setEditBtnText(\"Save\");\n      }else{\n        props.addArticle(state);\n        props.deleteArticle(article.id);\n        setEditMode({...editMode, readOnly:true});\n        setEditBtnText(\"Edit\");\n        props.history.push(\"/\");\n      }\n    }\n    return (\n        <Container maxwidth=\"lg\">\n            <Paper className={classes.root}>\n                <TextField\n                  id=\"articleBody\"\n                  label={state.title}\n                  defaultValue={state.body}\n                  className={classes.textField}\n                  margin=\"normal\"\n                  fullWidth\n                  multiline\n                  InputProps={editMode}\n                  InputLabelProps={classes.label}\n                  onChange={event => setState({...state, body:event.target.value})}\n                />\n                <Grid container>\n                  <Grid item xs={8} sm={8} md={8} lg={10} xl={10}>\n                    <Typography component=\"p\" className={classes.tag}>\n                      {article.tags}\n                    </Typography>\n                  </Grid>  \n                  {isLogged ?(\n                    <>\n                      <Grid item xs={2} sm={2} md={2} lg={1} xl={1}>  \n                          <Button variant=\"outlined\" fullWidth className={classes.button} color=\"primary\" onClick={editArticle}>{editBtnText}</Button>\n                      </Grid>\n                      <Grid item xs={2} sm={2} md={2} lg={1} xl={1}>\n                        <Link to=\"/\" className={classes.links}>\n                          <Button variant=\"outlined\" fullWidth className={classes.button} color=\"secondary\" onClick={event => props.deleteArticle(article.id)}>Delete</Button>\n                        </Link>\n                      </Grid>\n                    </>\n                    ):(<></>)\n                  }\n                </Grid>\n            </Paper>\n        </Container>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  isLogged: getLogged\n})\nconst mapDispatchToProps =  dispatch => bindActionCreators({\n  addArticle,\n  deleteArticle\n},dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage)"]},"metadata":{},"sourceType":"module"}
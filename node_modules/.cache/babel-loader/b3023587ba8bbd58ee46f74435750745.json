{"ast":null,"code":"var _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/ArticlePage/ArticlePage.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle';\nimport Container from '@material-ui/core/Container';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getLogged } from '../../selectors/getLogged';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1)\n  },\n  button: {\n    height: \"100%\"\n  },\n  tag: {\n    color: \"grey\",\n    fontSize: \"13px\"\n  },\n  links: {\n    textDecoration: \"none\",\n    position: \"relative\",\n    right: \"0\"\n  },\n  divider: {\n    marginBottom: \"10px\"\n  }\n}));\n\nfunction ArticlePage(props) {\n  const classes = useStyles();\n  const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n  const isLogged = props.isLogged;\n  let readOnly = false;\n  return React.createElement(Container, {\n    maxwidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"articleBody\",\n    label: article.title,\n    defaultValue: article.body,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 10,\n    md: 10,\n    lg: 11,\n    xl: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    className: classes.tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, article.tags)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    md: 2,\n    lg: 1,\n    xl: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, isLogged ? React.createElement(Link, {\n    to: \"/\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"secondary\",\n    onClick: event => props.deleteArticle(article.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Delete\")) : React.createElement(React.Fragment, null)))));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  isLogged: getLogged\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  deleteArticle\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/ArticlePage/ArticlePage.js"],"names":["React","connect","makeStyles","deleteArticle","Container","createStructuredSelector","getAllArticles","getLogged","bindActionCreators","Typography","Button","Grid","Link","Paper","Divider","TextField","useStyles","theme","root","padding","spacing","marginBottom","button","height","tag","color","fontSize","links","textDecoration","position","right","divider","ArticlePage","props","classes","article","articles","find","item","id","parseInt","match","params","isLogged","readOnly","title","body","textField","tags","event","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADP;AAEFC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFZ,GAD6B;AAKjCE,EAAAA,MAAM,EAAC;AACLC,IAAAA,MAAM,EAAC;AADF,GAL0B;AAQjCC,EAAAA,GAAG,EAAC;AACFC,IAAAA,KAAK,EAAC,MADJ;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAR6B;AAYjCC,EAAAA,KAAK,EAAC;AACJC,IAAAA,cAAc,EAAC,MADX;AAEJC,IAAAA,QAAQ,EAAC,UAFL;AAGJC,IAAAA,KAAK,EAAC;AAHF,GAZ2B;AAiBjCC,EAAAA,OAAO,EAAC;AACNV,IAAAA,YAAY,EAAC;AADP;AAjByB,CAAL,CAAN,CAA5B;;AAsBA,SAASW,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMmB,OAAO,GAAGF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBH,EAApB,CAAhD,CAAhB;AACA,QAAMI,QAAQ,GAAGV,KAAK,CAACU,QAAvB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,OAAO,CAAChB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,KAAK,EAAEiB,OAAO,CAACU,KAFjB;AAGE,IAAA,YAAY,EAAEV,OAAO,CAACW,IAHxB;AAIE,IAAA,SAAS,EAAEZ,OAAO,CAACa,SAJrB;AAKE,IAAA,MAAM,EAAC,QALT;AAME,IAAA,SAAS,MANX;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,UAAU,EAAE;AACVH,MAAAA,QAAQ,EAAE;AADA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAmC,IAAA,EAAE,EAAE,EAAvC;AAA2C,IAAA,EAAE,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAA0B,IAAA,SAAS,EAAEV,OAAO,CAACV,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,OAAO,CAACa,IADX,CADF,CADF,EAME,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAuC,IAAA,EAAE,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,QAAQ,GACP,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,SAAS,EAAET,OAAO,CAACP,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,SAAS,MAApC;AAAqC,IAAA,SAAS,EAAEO,OAAO,CAACZ,MAAxD;AAAgE,IAAA,KAAK,EAAC,WAAtE;AAAkF,IAAA,OAAO,EAAE2B,KAAK,IAAIhB,KAAK,CAAC9B,aAAN,CAAoBgC,OAAO,CAACI,EAA5B,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADO,GAIJ,yCALL,CANF,CAdJ,CADJ,CADJ;AAkCH;;AAED,MAAMW,eAAe,GAAG7C,wBAAwB,CAAC;AAC/C+B,EAAAA,QAAQ,EAAE9B,cADqC;AAE/CqC,EAAAA,QAAQ,EAAEpC;AAFqC,CAAD,CAAhD;;AAIA,MAAM4C,kBAAkB,GAAIC,QAAQ,IAAI5C,kBAAkB,CAAC;AACzDL,EAAAA;AADyD,CAAD,EAExDiD,QAFwD,CAA1D;;AAIA,eAAenD,OAAO,CAACiD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deleteArticle } from '../../actions/deleteArticle'\nimport Container from '@material-ui/core/Container';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getLogged } from '../../selectors/getLogged';\nimport { bindActionCreators } from 'redux';\nimport { Typography, Button, Grid } from \"@material-ui/core\";\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n      },\n      button:{\n        height:\"100%\"\n      },\n      tag:{\n        color:\"grey\",\n        fontSize: \"13px\"\n      },\n      links:{\n        textDecoration:\"none\",\n        position:\"relative\",\n        right:\"0\"\n      },\n      divider:{\n        marginBottom:\"10px\"\n      }\n}));\n\nfunction ArticlePage(props) {\n    const classes = useStyles();\n    const article = props.articles.find(item => item.id === parseInt(props.match.params.id));\n    const isLogged = props.isLogged;\n    let readOnly = false;\n    return (\n        <Container maxwidth=\"lg\">\n            <Paper className={classes.root}>\n                <TextField\n                  id=\"articleBody\"\n                  label={article.title}\n                  defaultValue={article.body}\n                  className={classes.textField}\n                  margin=\"normal\"\n                  fullWidth\n                  multiline\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  \n                />\n                <Grid container>\n                  <Grid item xs={10} sm={10} md={10} lg={11} xl={11}>\n                    <Typography component=\"p\" className={classes.tag}>\n                      {article.tags}\n                    </Typography>\n                  </Grid>  \n                  <Grid item xs={2} sm={2} md={2} lg={1} xl={1}>\n                  {isLogged ?(\n                    <Link to=\"/\" className={classes.links}>\n                      <Button variant=\"outlined\" fullWidth className={classes.button} color=\"secondary\" onClick={event => props.deleteArticle(article.id)}>Delete</Button>\n                    </Link>\n                    ):(<></>)\n                  }\n                  </Grid>\n                </Grid>\n            </Paper>\n        </Container>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  isLogged: getLogged\n})\nconst mapDispatchToProps =  dispatch => bindActionCreators({\n  deleteArticle,\n},dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Experiments/React/real-world/src/components/Home/Home.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Article from '../Article/Article';\nimport { createStructuredSelector } from 'reselect';\nimport { getAllArticles } from '../../selectors/getAllArticles';\nimport { getAllTags } from '../../selectors/getAllTags';\nimport { getLogged } from '../../selectors/getLogged';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginBottom: theme.spacing(2)\n  },\n  input: {\n    display: 'none'\n  },\n  links: {\n    textDecoration: \"none\",\n    color: \"white\"\n  }\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n  const articles = props.articles;\n  const isLogged = props.isLogged;\n  const tags = props.tags;\n  const ArticlesList = articles.map((item, id) => {\n    return React.createElement(Article, {\n      item: item,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  });\n  const TagsList = tags.map((item, id) => {\n    return React.createElement(Button, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.name);\n  });\n  const searchCars = props.cars.filter(car => car.model.includes(searchInfo) || car.description.includes(searchInfo) || car.carClass.includes(searchInfo));\n  const resultCars = searchCars.filter(car => car.carClass.includes(categoryInfo));\n  const carsList = resultCars.map((car, id) => React.createElement(Grid, {\n    key: id,\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Car, {\n    id: id,\n    car: car,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, isLogged ? React.createElement(Link, {\n    to: \"/add\",\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Add\")) : React.createElement(React.Fragment, null), React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, ArticlesList)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, TagsList))));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  tags: getAllTags,\n  isLogged: getLogged\n});\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/home/snaildog/Документы/Experiments/React/real-world/src/components/Home/Home.js"],"names":["React","connect","makeStyles","Link","Grid","Button","Container","Article","createStructuredSelector","getAllArticles","getAllTags","getLogged","useStyles","theme","button","marginBottom","spacing","input","display","links","textDecoration","color","Home","props","classes","articles","isLogged","tags","ArticlesList","map","item","id","TagsList","name","searchCars","cars","filter","car","model","includes","searchInfo","description","carClass","resultCars","categoryInfo","carsList","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Article from '../Article/Article';\nimport { createStructuredSelector } from 'reselect'\nimport { getAllArticles } from '../../selectors/getAllArticles'\nimport { getAllTags } from '../../selectors/getAllTags'\nimport { getLogged } from '../../selectors/getLogged'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    display: 'none',\n  },\n  links:{\n    textDecoration:\"none\",\n    color: \"white\"\n}\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n  const articles = props.articles;\n  const isLogged = props.isLogged;\n  const tags = props.tags;\n\n  const ArticlesList = articles.map((item, id)=>{\n    return <Article item={item} key={id}/>\n  });\n  const TagsList = tags.map((item, id)=>{\n    return <Button key={id}>{item.name}</Button>\n  });\n    const searchCars = props.cars.filter(car => car.model.includes(searchInfo) || car.description.includes(searchInfo) || car.carClass.includes(searchInfo));\n    const resultCars = searchCars.filter(car => car.carClass.includes(categoryInfo) );\n    const carsList = resultCars.map((car,id)=>\n    <Grid key={id} item xs={3}>\n      <Car id={id} car={car}/>\n    </Grid>\n    )\n    return (\n      <Container>\n        {isLogged ? (\n            <Link to=\"/add\" className={classes.links} >\n              <Button variant=\"outlined\" color=\"primary\" className={classes.button}>\n                Add\n              </Button>\n            </Link>\n          ):(\n            <></>\n          )}\n        <Grid container spacing={3}>\n          <Grid item xs={10}>\n          <div>{ArticlesList}</div>\n          </Grid>\n          <Grid item xs={2}>\n          <div>{TagsList}</div>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  articles: getAllArticles,\n  tags: getAllTags,\n  isLogged: getLogged\n})\n\nexport default connect(mapStateToProps)(Home)"]},"metadata":{},"sourceType":"module"}
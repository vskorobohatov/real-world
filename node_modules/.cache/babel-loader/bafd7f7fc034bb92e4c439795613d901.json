{"ast":null,"code":"import _slicedToArray from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/ProfilePage/UserArticles/UserArticles.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createStructuredSelector } from 'reselect';\nimport { getUser } from '../../../selectors/getUser';\nimport { connect } from 'react-redux';\nimport { getAllArticles } from '../../../selectors/getAllArticles';\nimport { getAllTags } from '../../../selectors/getAllTags';\nimport Article from '../../Article/Article';\n\nfunction UserArticlesCard(props) {\n  const _useState = useState({\n    articles: \"\",\n    user: props.user.User\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  state.articles = props.articles.filter(item => item.author === state.user.fname);\n  const ArticlesList = state.articles.map((item, id) => {\n    return React.createElement(Article, {\n      item: item,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  });\n  return React.createElement(React.Fragment, null, ArticlesList);\n}\n\nconst mapStateToProps = createStructuredSelector({\n  user: getUser,\n  articles: getAllArticles,\n  tags: getAllTags\n});\nexport default connect(mapStateToProps)(UserArticlesCard);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/ProfilePage/UserArticles/UserArticles.js"],"names":["React","useState","makeStyles","createStructuredSelector","getUser","connect","getAllArticles","getAllTags","Article","UserArticlesCard","props","articles","user","User","state","setState","filter","item","author","fname","ArticlesList","map","id","mapStateToProps","tags"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBACLT,QAAQ,CAAC;AACjCU,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWC;AAFgB,GAAD,CADH;AAAA;AAAA,QACxBC,KADwB;AAAA,QACjBC,QADiB;;AAM/BD,EAAAA,KAAK,CAACH,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeK,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAcJ,KAAK,CAACF,IAAN,CAAWO,KAAvD,CAAjB;AAEA,QAAMC,YAAY,GAAGN,KAAK,CAACH,QAAN,CAAeU,GAAf,CAAmB,CAACJ,IAAD,EAAOK,EAAP,KAAY;AAClD,WAAO,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEL,IAAf;AAAqB,MAAA,GAAG,EAAEK,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFoB,CAArB;AAIA,SACE,0CACGF,YADH,CADF;AAKD;;AACD,MAAMG,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CS,EAAAA,IAAI,EAAER,OADyC;AAE/CO,EAAAA,QAAQ,EAAEL,cAFqC;AAG/CkB,EAAAA,IAAI,EAAEjB;AAHyC,CAAD,CAAhD;AAMA,eAAeF,OAAO,CAACkB,eAAD,CAAP,CAAyBd,gBAAzB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createStructuredSelector } from 'reselect';\nimport { getUser } from '../../../selectors/getUser';\nimport { connect } from 'react-redux';\nimport { getAllArticles } from '../../../selectors/getAllArticles';\nimport { getAllTags } from '../../../selectors/getAllTags';\nimport Article from '../../Article/Article';\n\nfunction UserArticlesCard(props) {\n  const [state, setState] = useState({\n    articles: \"\",\n    user: props.user.User,\n  });\n  \n  state.articles = props.articles.filter(item => item.author===state.user.fname);\n\n  const ArticlesList = state.articles.map((item, id)=>{\n    return <Article item={item} key={id}/>\n  });\n\n  return (\n    <>\n      {ArticlesList}\n    </>  \n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  user: getUser,\n  articles: getAllArticles,\n  tags: getAllTags,\n});\n\nexport default connect(mapStateToProps)(UserArticlesCard)"]},"metadata":{},"sourceType":"module"}
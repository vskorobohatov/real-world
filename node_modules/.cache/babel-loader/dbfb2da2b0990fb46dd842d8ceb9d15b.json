{"ast":null,"code":"import _objectSpread from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/snaildog/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/real-world/src/components/SettingsPage/Profile/Profile.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { createStructuredSelector } from 'reselect';\nimport { getUser } from '../../../selectors/getUser';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport { createUser } from '../';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: \"100%\"\n  },\n  media: {\n    height: 140,\n    width: 140,\n    margin: \"0px auto\",\n    borderRadius: \"50%\",\n    backgroundColor: \"black\",\n    marginBottom: theme.spacing(5)\n  }\n}));\n\nfunction ProfileCard(props) {\n  const classes = useStyles();\n\n  const _useState = useState({\n    readOnly: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        editMode = _useState2[0],\n        setEditMode = _useState2[1];\n\n  const _useState3 = useState(\"Edit\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        editBtnText = _useState4[0],\n        setEditBtnText = _useState4[1];\n\n  const _useState5 = useState({\n    fname: props.user.User.fname,\n    lname: props.user.User.lname,\n    email: props.user.User.email,\n    password: props.user.User.password\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        state = _useState6[0],\n        setState = _useState6[1];\n\n  function editUser(event) {\n    event.preventDefault();\n\n    if (editBtnText === \"Edit\") {\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: false\n      }));\n      setEditBtnText(\"Save\");\n    } else {\n      props.createUser(state);\n      setEditMode(_objectSpread({}, editMode, {\n        readOnly: true\n      }));\n      setEditBtnText(\"Edit\");\n    }\n  }\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: \"/logo.jpg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"articleBody\",\n    label: \"First name\",\n    defaultValue: state.fname,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: {\n      className: classes.label\n    },\n    onChange: event => setState(_objectSpread({}, state, {\n      fname: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"articleBody\",\n    label: \"Last name\",\n    defaultValue: state.lname,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: {\n      className: classes.label\n    },\n    onChange: event => setState(_objectSpread({}, state, {\n      lname: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"articleBody\",\n    label: \"Email\",\n    defaultValue: state.email,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: {\n      className: classes.label\n    },\n    onChange: event => setState(_objectSpread({}, state, {\n      email: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"articleBody\",\n    label: \"Password\",\n    defaultValue: state.password,\n    className: classes.textField,\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    InputProps: editMode,\n    InputLabelProps: {\n      className: classes.label\n    },\n    onChange: event => setState(_objectSpread({}, state, {\n      password: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    fullWidth: true,\n    className: classes.button,\n    color: \"primary\",\n    onClick: editUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, editBtnText)));\n}\n\nconst mapStateToProps = createStructuredSelector({\n  user: getUser\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  createUser\n}, dispatch);\n\nexport default connect(mapStateToProps)(ProfileCard);","map":{"version":3,"sources":["/home/snaildog/Документы/GitHub/real-world/src/components/SettingsPage/Profile/Profile.js"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","CardMedia","Button","createStructuredSelector","getUser","connect","TextField","bindActionCreators","createUser","useStyles","theme","card","width","media","height","margin","borderRadius","backgroundColor","marginBottom","spacing","ProfileCard","props","classes","readOnly","editMode","setEditMode","editBtnText","setEditBtnText","fname","user","User","lname","email","password","state","setState","editUser","event","preventDefault","textField","className","label","target","value","button","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { createStructuredSelector } from 'reselect';\nimport { getUser } from '../../../selectors/getUser';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport { createUser } from '../'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width:\"100%\"\n  },\n  media: {\n    height: 140,\n    width: 140,\n    margin:\"0px auto\",\n    borderRadius:\"50%\",\n    backgroundColor:\"black\",\n    marginBottom:theme.spacing(5),\n  },\n}));\n\nfunction ProfileCard(props) {\n  const classes = useStyles();\n  const [editMode, setEditMode] = useState({readOnly: true});\n  const [editBtnText, setEditBtnText] = useState(\"Edit\");\n  const [state, setState]=useState({\n    fname:props.user.User.fname,\n    lname:props.user.User.lname,\n    email:props.user.User.email,\n    password:props.user.User.password,\n  });\n\n  function editUser(event){\n    event.preventDefault();\n    if(editBtnText === \"Edit\"){\n      setEditMode({...editMode, readOnly:false});\n      setEditBtnText(\"Save\");\n    }else{\n      props.createUser(state);\n      setEditMode({...editMode, readOnly:true});\n      setEditBtnText(\"Edit\");\n    }\n  }\n\n  return (\n    <Card className={classes.card}>\n        <CardContent>\n            <CardMedia\n            className={classes.media}\n            image=\"/logo.jpg\"\n            title=\"Contemplative Reptile\"\n            />\n            <TextField\n              id=\"articleBody\"\n              label=\"First name\"\n              defaultValue={state.fname}\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              multiline\n              InputProps={editMode}\n              InputLabelProps={{\n                className: classes.label,\n              }}\n              onChange={event => setState({...state, fname:event.target.value})}\n            />\n            <TextField\n              id=\"articleBody\"\n              label=\"Last name\"\n              defaultValue={state.lname}\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              multiline\n              InputProps={editMode}\n              InputLabelProps={{\n                className: classes.label,\n              }}\n              onChange={event => setState({...state, lname:event.target.value})}\n            />\n            <TextField\n              id=\"articleBody\"\n              label=\"Email\"\n              defaultValue={state.email}\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              multiline\n              InputProps={editMode}\n              InputLabelProps={{\n                className: classes.label,\n              }}\n              onChange={event => setState({...state, email:event.target.value})}\n            />\n            <TextField\n              id=\"articleBody\"\n              label=\"Password\"\n              defaultValue={state.password}\n              className={classes.textField}\n              margin=\"normal\"\n              fullWidth\n              multiline\n              InputProps={editMode}\n              InputLabelProps={{\n                className: classes.label,\n              }}\n              onChange={event => setState({...state, password:event.target.value})}\n            />\n        </CardContent>\n      <CardActions>\n      <Button variant=\"outlined\" fullWidth className={classes.button} color=\"primary\" onClick={editUser}>{editBtnText}</Button>\n      </CardActions>\n    </Card>\n  );\n}\nconst mapStateToProps = createStructuredSelector({\n  user: getUser\n});\nconst mapDispatchToProps =  dispatch => bindActionCreators({\n  createUser\n},dispatch);\n\nexport default connect(mapStateToProps)(ProfileCard)"]},"metadata":{},"sourceType":"module"}